#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/csma-module.h"
#include "ns3/internet-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/applications-module.h"
#include "ns3/ipv4-global-routing-helper.h"

using namespace ns3;
int main (int argc, char *argv[])
{
    bool verbose = true;
    if (verbose)
    {
        LogComponentEnable ("UdpEchoClientApplication", LOG_LEVEL_INFO);
        LogComponentEnable ("UdpEchoServerApplication", LOG_LEVEL_INFO); 
    }
    NodeContainer host, router, host1;
    host.Create (2);
    router.Create (4);
    
    NodeContainer subnet1, subnet2, subnet3, subnet4, subnet5 ;
    subnet1.Add (host.Get (0));
    subnet1.Add (router.Get (0));
    
    PointToPointHelper pointToPoint;
    pointToPoint.SetDeviceAttribute ("DataRate", StringValue ("5Mbps"));
    pointToPoint.SetChannelAttribute ("Delay", StringValue ("2ms"));
 
    NetDeviceContainer subnet1Devices, subnet2Devices, subnet3Devices, subnet4Devices, subnet5Devices;
    subnet1Devices = pointToPoint.Install (subnet1);
   
    InternetStackHelper stack;
    stack.Install (router);
    stack.Install (host);

    Ipv4AddressHelper address1, address2, address3, address4, address5, address6;
    address1.SetBase ("11.1.1.0", "255.255.255.0");
    
    Ipv4InterfaceContainer subnet1Interfaces, subnet2Interfaces, subnet3Interfaces, subnet4Interfaces, subnet5Interfaces;
    subnet1Interfaces = address1.Assign (subnet1Devices);
    
    subnet2.Add (router.Get (0));
    subnet2.Add (router.Get (1));
    subnet2Devices = pointToPoint.Install (subnet2);
    address2.SetBase ("11.1.2.0", "255.255.255.0");
    subnet2Interfaces = address2.Assign (subnet2Devices);
    
    subnet3.Add (router.Get (0));
    subnet3.Add (router.Get (2));
    subnet3Devices = pointToPoint.Install (subnet3);
    address3.SetBase ("11.1.3.0", "255.255.255.0");
    subnet3Interfaces = address3.Assign (subnet3Devices);

    subnet4.Add (router.Get (1));
    subnet4.Add (router.Get (3));
    subnet4Devices = pointToPoint.Install (subnet4);
    address4.SetBase ("11.1.4.0", "255.255.255.0");
    subnet4Interfaces = address4.Assign (subnet4Devices);
    
    subnet5.Add (router.Get (2));
    subnet5.Add (host.Get (1));
    subnet5Devices = pointToPoint.Install (subnet5);
    address5.SetBase ("11.1.5.0", "255.255.255.0");
    subnet5Interfaces = address5.Assign (subnet5Devices);
    
    UdpEchoServerHelper echoServer (9);
    ApplicationContainer serverApps = echoServer.Install (subnet5.Get (1));
    serverApps.Start (Seconds (1.0));
    serverApps.Stop (Seconds (10.0));
    
    UdpEchoClientHelper echoClient (subnet5Interfaces.GetAddress (1), 9);
    echoClient.SetAttribute ("MaxPackets", UintegerValue (3));
    echoClient.SetAttribute ("Interval", TimeValue (Seconds (1.0)));
    echoClient.SetAttribute ("PacketSize", UintegerValue (1024));

    ApplicationContainer clientApps = echoClient.Install (subnet1.Get (0));
    clientApps.Start (Seconds (1.0));
    clientApps.Stop (Seconds (10.0));
    
    Ipv4GlobalRoutingHelper::PopulateRoutingTables ();

    Simulator::Run ();
    Simulator::Destroy ();
return 0;
}
